{"ast":null,"code":"import { ADD_TO_CART, REMOVE_FROM_CART, DECREMENT_QTY } from '../constants/ActionTypes';\nexport default function cartReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cart: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      // debugger;\n      const productId = action.product.id;\n\n      if (state.cart.findIndex(product => product.id === productId) !== -1) {\n        const cart = state.cart.reduce((cartAcc, product) => {\n          if (product.id === productId) {\n            cartAcc.push({ ...product,\n              qty: product.qty + 1,\n              sum: (product.price - product.discount) * product.qty\n            });\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n        return { ...state,\n          cart\n        };\n      }\n\n      return { ...state,\n        cart: [...state.cart, { ...action.product,\n          qty: action.qty,\n          sum: (action.product.price - action.product.discount) * action.qty\n        }]\n      };\n\n    case DECREMENT_QTY:\n      // debugger;\n      if (state.cart.findIndex(product => product.id === productId) !== -1) {\n        const cart = state.cart.reduce((cartAcc, product) => {\n          if (product.id === productId && product.qty > 1) {\n            cartAcc.push({ ...product,\n              qty: product.qty - 1,\n              sum: (action.product.price - action.product.discount) * action.qty\n            });\n          } else {\n            cartAcc.push(product);\n          }\n\n          return cartAcc;\n        }, []);\n        return { ...state,\n          cart\n        };\n      }\n\n      return { ...state,\n        cart: [...state.cart, { ...action.product,\n          qty: action.qty,\n          sum: (action.product.price - action.product.discount) * action.qty\n        }]\n      };\n\n    case REMOVE_FROM_CART:\n      // debugger;\n      return {\n        cart: state.cart.filter(item => item.id !== action.product.id)\n      };\n\n    default:\n      {}\n  }\n\n  return state;\n}","map":{"version":3,"sources":["F:/shape-frame/src/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","DECREMENT_QTY","cartReducer","state","cart","action","type","productId","product","id","findIndex","reduce","cartAcc","push","qty","sum","price","discount","filter","item"],"mappings":"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","sourcesContent":["import { ADD_TO_CART, REMOVE_FROM_CART, DECREMENT_QTY } from '../constants/ActionTypes';\r\n\r\nexport default function cartReducer(state = { cart: [] }, action) {\r\n    switch (action.type) {\r\n        case ADD_TO_CART:\r\n           // debugger;\r\n            const productId = action.product.id;\r\n            if (state.cart.findIndex(product => product.id === productId) !== -1) {\r\n                const cart = state.cart.reduce((cartAcc, product) => {\r\n                    if (product.id === productId) {\r\n                        cartAcc.push({ ...product, qty: product.qty + 1, sum: (product.price - product.discount) * product.qty });\r\n                    } else {\r\n                        cartAcc.push(product);\r\n                    }\r\n                    return cartAcc;\r\n                }, [])\r\n\r\n                return { ...state, cart }\r\n            }\r\n\r\n            return { ...state, cart: [...state.cart, { ...action.product, qty: action.qty, sum: (action.product.price - action.product.discount) * action.qty }] }\r\n\r\n        case DECREMENT_QTY:\r\n           // debugger;\r\n            if (state.cart.findIndex(product => product.id === productId) !== -1) {\r\n                const cart = state.cart.reduce((cartAcc, product) => {\r\n                    if (product.id === productId && product.qty > 1) {\r\n                        cartAcc.push({ ...product, qty: product.qty - 1, sum: (action.product.price - action.product.discount) * action.qty });\r\n                    } else {\r\n                        cartAcc.push(product);\r\n                    }\r\n                    return cartAcc;\r\n                }, [])\r\n\r\n                return { ...state, cart }\r\n            }\r\n            return { ...state, cart: [...state.cart, { ...action.product, qty: action.qty, sum: (action.product.price - action.product.discount) * action.qty }] }\r\n\r\n        case REMOVE_FROM_CART:\r\n           // debugger;\r\n            return {\r\n                cart: state.cart.filter(item => item.id !== action.product.id)\r\n            }\r\n\r\n        default:\r\n            { }\r\n    }\r\n\r\n    return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}